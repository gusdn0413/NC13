package types;
// 인터페이스
// 인터페이스는 참조형 데이터타입의 한가지 종류로써
// 클래스와 매우 유사해보이지만
// 필드가 존재할 수 없고
// 메소드는 "선언"만 한다.
// 즉 "추상"적으로 메소드가 이렇게 생겼지? 만 만들기 때문에
// 그렇게 선언된 메소드들을 우리가 추상 메소드라고도 부른다.

// 실제로 어떠한 필드가 있고 메소드가 어떤 내용을 가져서
// 어떤 코드가 실행될지는 해당 인터페이스를 상속받는
// 클래스가 직접 구현하게 된다.
// 만약, 인터페이스를 상속 받았는데 인터페이스의 메소드를
// 오버라이드 하지 않으면 에러가 발생된다.

// 즉, 클래스 상속과는 다르게 오버라이드에 대해 강제성을 띄는
// 상속이 된다.

// interface 상속은
// 우리가 상속받는 자식 클래스 이름 옆에
// implements 인터페이스이름 으로
// 상속을 하게 된다.

public interface IAnimal {
    public void makeSound();

    public void move();

    public void info();

}














