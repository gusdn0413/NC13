package day0514;
// 객체지향 프로그래밍의 5원칙
// 객체지향 프로그래밍에서는 5가지 원칙이 있는데
// 해당 원칙을 잘 지켜야 여러분들이 프로그래밍을 만들때 진정한 객체지향 프로그래밍을 한다 고 할수 있다.
// 하지만 여러분들이 전부다 지키는 것은 훗날의 일이고
// 지금은 S를 잘 지키는 것을 목표로 해야한다.

// S: 단일 책임 원칙(Single Responsibility Principle)
//    클래스는 한번에 한가지만 책임을 지어야 한다.
//    만약, 해당 클래스가 데이터를 필드화 시켜서 관리할거면 그것만 해야하고
//    화면 출력을 담당할거면 화면 출력만 담당을 해야한다.

// O: 개방 폐쇄 원칙(Open - Closed Principle)
//    모든 클래스는 확장에는 열려 있고, 변경에는 닫혀 있어야 한다.
//    즉, 우리가 어떠한 기능을 추가할 때에는 쉽지만,
//    내부의 변경이 다른 클래스에 영향을 미쳐선 안된다.

// L: 리스코프 대체 원칙(Liskov Substitution Principle)
//    모든 부모 클래스의 객체를 자식 클래스의 객체로 교체하더라도
//    프로그램에는 문제가 없어야 한다.

// I: 인터페이스 분리 원칙(Interface Segregation Principle)
//    프로그램은, 자신이 사용하지 않는 메서드를 의존해선 안된다.
//
// D: 의존 역전 원칙(Dependency Inversion Principle)
//    A 클래스가 B 클래스에 의존적이더라고 해도
//    A 클래스는 B 클래스의 메소드가 어떻게 작동하는지는 알 필요가 없다.
public class Ex05SOLID {
}









